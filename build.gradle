plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

tasks.named('wrapper', Wrapper).configure {
    // Define wrapper values here so as to not have to always do so when updating gradlew.properties.
    // Switching this to Wrapper.DistributionType.ALL will download the full gradle sources that comes with
    // documentation attached on cursor hover of gradle classes and methods. However, this comes with increased
    // file size for Gradle. If you do switch this to ALL, run the Gradle wrapper task twice afterwards.
    // (Verify by checking gradle/wrapper/gradle-wrapper.properties to see if distributionUrl now points to `-all`)
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
    maven {
        //name = "Modmaven"
        url = "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        //content {
        //    includeGroup 'appeng'
        //}
    }
    maven {
        //name = "Jared's Mavel"
        url = "maven.blamejared.com"
    }
    maven {
        url = "https://dl.cloudsmith.io/public/novamachina-mods/release/maven/"
    }
    maven {
        url = 'https://maven.rover656.dev/releases'
    }
    maven {
        url "https://maven.shedaniel.me"
    }

    maven {
        url "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
        content {
            includeGroup "com.klikli_dev"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven {
        name = "OctoStudios (Curios Api Contiunation)"
        url = uri("https://maven.octo-studios.com/releases")
        content {
            includeGroup "top.theillusivec4.curios"
        }
    }
    maven {
        name = "SmartBrainLib (SBL) Maven Repo"
        url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
    }
    maven {
        name 'LDTTeam - Modding - PerViamInvenire (MineColonies)'
        url 'https://ldtteam.jfrog.io/ldtteam/modding/'
        content {
            includeGroup "com.ldtteam"
        }
    }
    maven {
        name = "TerraformersMC (emi)"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

base {
    archivesName = mod_id
}

// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager

// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Sets up a dependency configuration called 'localRuntime'.
// This configuration should be used instead of 'runtimeOnly' to declare
// a dependency that will be present for runtime testing but that is
// "optional", meaning it will not be pulled by dependents of this mod.
configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation "com.blamejared.crafttweaker:CraftTweaker-neoforge-${minecraft_version}:${crafttweaker_version}"
    compileOnly "appeng:appliedenergistics2-neoforge:${ae2_version}"
    localRuntime "appeng:appliedenergistics2-neoforge:${ae2_version}"
    //compileOnly "novamachina.exnihilosequentia:exnihilosequentia:${ex_nihilo_version}"
    //localRuntime "novamachina.exnihilosequentia:exnihilosequentia:${ex_nihilo_version}"
    //localRuntime "novamachina.novacore:novacore:${novacore_version}"
    //compileOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
    //localRuntime "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
    //localRuntime "dev.architectury:architectury-neoforge:${architectury_version}"
    //compileOnly "com.enderio:EnderIO:${enderio_version}:api"
    //localRuntime "com.enderio:EnderIO:${enderio_version}"
    compileOnly "com.klikli_dev:occultism-${minecraft_version}-neoforge:${occultism_version}"
    localRuntime "com.klikli_dev:occultism-${minecraft_version}-neoforge:${occultism_version}"
    compileOnly "com.klikli_dev:modonomicon-${minecraft_version}-neoforge:${modonomicon_version}"
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version         : minecraft_version,
            minecraft_version_range   : minecraft_version_range,
            neo_version               : neo_version,
            neo_version_range         : neo_version_range,
            loader_version_range      : loader_version_range,
            mod_id                    : mod_id,
            mod_name                  : mod_name,
            mod_license               : mod_license,
            mod_version               : mod_version,
            mod_authors               : mod_authors,
            mod_description           : mod_description,
            ae2_version_range         : ae2_version_range,
            crafttweaker_version_range: crafttweaker_version_range,
            ex_nihilo_version_range   : ex_nihilo_version_range,
            enderio_version_range     : enderio_version_range,
            occultism_version_range   : occultism_version_range,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

subsystems {
    parchment {
        minecraftVersion = minecraft_version
        mappingsVersion = parchment_version
    }
}
